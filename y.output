Terminals which are not used

   COLON
   ARRAY
   THEN
   DO


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: /* empty */
    3      | stmt stmts

    4 stmt: lvalue ASSIGN exp SEMICOLON
    5     | ty ID SEMICOLON
    6     | ty ID ASSIGN exp SEMICOLON
    7     | ty LBRACK INT RBRACK ID ASSIGN exp SEMICOLON
    8     | IF LPAREN exp RPAREN stmt ELSE stmt
    9     | WHILE LPAREN exp RPAREN stmt
   10     | FOR LPAREN ID ASSIGN exp SEMICOLON exp SEMICOLON stmt RPAREN stmt
   11     | LBRACE stmts RBRACE
   12     | RETURN exp SEMICOLON
   13     | FUN ID RETURNS ty LPAREN tyargs RPAREN LBRACE stmts RBRACE

   14 exp: lvalue
   15    | INT
   16    | STRING
   17    | exp PLUS exp
   18    | exp MINUS exp
   19    | exp TIMES exp
   20    | exp DIVIDE exp
   21    | exp EQ exp
   22    | exp NEQ exp
   23    | exp LT exp
   24    | exp GT exp
   25    | exp LE exp
   26    | exp GE exp
   27    | exp AND exp
   28    | exp OR exp
   29    | ID LPAREN args RPAREN

   30 ty: INTTY
   31   | STRINGTY
   32   | ty LBRACK RBRACK

   33 lvalue: ID
   34       | lvalue LBRACK exp RBRACK

   35 args: /* empty */
   36     | exp
   37     | exp COMMA args

   38 tyargs: /* empty */
   39       | ty ID
   40       | ty ID COMMA tyargs


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 5 6 7 10 13 29 33 39 40
STRING (259) 16
INT (260) 7 15
COMMA (261) 37 40
COLON (262)
SEMICOLON (263) 4 5 6 7 10 12
LPAREN (264) 8 9 10 13 29
RPAREN (265) 8 9 10 13 29
LBRACK (266) 7 32 34
RBRACK (267) 7 32 34
LBRACE (268) 11 13
RBRACE (269) 11 13
PLUS (270) 17
MINUS (271) 18
TIMES (272) 19
DIVIDE (273) 20
EQ (274) 21
NEQ (275) 22
LT (276) 23
LE (277) 25
GT (278) 24
GE (279) 26
AND (280) 27
OR (281) 28
ASSIGN (282) 4 6 7 10
ARRAY (283)
IF (284) 8
THEN (285)
ELSE (286) 8
WHILE (287) 9
FOR (288) 10
DO (289)
INTTY (290) 30
STRINGTY (291) 31
FUN (292) 13
RETURNS (293) 13
RETURN (294) 12


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
stmts (42)
    on left: 2 3, on right: 1 3 11 13
stmt (43)
    on left: 4 5 6 7 8 9 10 11 12 13, on right: 3 8 9 10
exp (44)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29,
    on right: 4 6 7 8 9 10 12 17 18 19 20 21 22 23 24 25 26 27 28 34
    36 37
ty (45)
    on left: 30 31 32, on right: 5 6 7 13 32 39 40
lvalue (46)
    on left: 33 34, on right: 4 14 34
args (47)
    on left: 35 36 37, on right: 29 37
tyargs (48)
    on left: 38 39 40, on right: 13 40


state 0

    0 $accept: . program $end

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    $default  reduce using rule 2 (stmts)

    program  go to state 10
    stmts    go to state 11
    stmt     go to state 12
    ty       go to state 13
    lvalue   go to state 14


state 1

   33 lvalue: ID .

    $default  reduce using rule 33 (lvalue)


state 2

   11 stmt: LBRACE . stmts RBRACE

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    $default  reduce using rule 2 (stmts)

    stmts   go to state 15
    stmt    go to state 12
    ty      go to state 13
    lvalue  go to state 14


state 3

    8 stmt: IF . LPAREN exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 16


state 4

    9 stmt: WHILE . LPAREN exp RPAREN stmt

    LPAREN  shift, and go to state 17


state 5

   10 stmt: FOR . LPAREN ID ASSIGN exp SEMICOLON exp SEMICOLON stmt RPAREN stmt

    LPAREN  shift, and go to state 18


state 6

   30 ty: INTTY .

    $default  reduce using rule 30 (ty)


state 7

   31 ty: STRINGTY .

    $default  reduce using rule 31 (ty)


state 8

   13 stmt: FUN . ID RETURNS ty LPAREN tyargs RPAREN LBRACE stmts RBRACE

    ID  shift, and go to state 19


state 9

   12 stmt: RETURN . exp SEMICOLON

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 23
    lvalue  go to state 24


state 10

    0 $accept: program . $end

    $end  shift, and go to state 25


state 11

    1 program: stmts .

    $default  reduce using rule 1 (program)


state 12

    3 stmts: stmt . stmts

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    $default  reduce using rule 2 (stmts)

    stmts   go to state 26
    stmt    go to state 12
    ty      go to state 13
    lvalue  go to state 14


state 13

    5 stmt: ty . ID SEMICOLON
    6     | ty . ID ASSIGN exp SEMICOLON
    7     | ty . LBRACK INT RBRACK ID ASSIGN exp SEMICOLON
   32 ty: ty . LBRACK RBRACK

    ID      shift, and go to state 27
    LBRACK  shift, and go to state 28


state 14

    4 stmt: lvalue . ASSIGN exp SEMICOLON
   34 lvalue: lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 29
    ASSIGN  shift, and go to state 30


state 15

   11 stmt: LBRACE stmts . RBRACE

    RBRACE  shift, and go to state 31


state 16

    8 stmt: IF LPAREN . exp RPAREN stmt ELSE stmt

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 32
    lvalue  go to state 24


state 17

    9 stmt: WHILE LPAREN . exp RPAREN stmt

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 33
    lvalue  go to state 24


state 18

   10 stmt: FOR LPAREN . ID ASSIGN exp SEMICOLON exp SEMICOLON stmt RPAREN stmt

    ID  shift, and go to state 34


state 19

   13 stmt: FUN ID . RETURNS ty LPAREN tyargs RPAREN LBRACE stmts RBRACE

    RETURNS  shift, and go to state 35


state 20

   29 exp: ID . LPAREN args RPAREN
   33 lvalue: ID .

    LPAREN  shift, and go to state 36

    $default  reduce using rule 33 (lvalue)


state 21

   16 exp: STRING .

    $default  reduce using rule 16 (exp)


state 22

   15 exp: INT .

    $default  reduce using rule 15 (exp)


state 23

   12 stmt: RETURN exp . SEMICOLON
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    SEMICOLON  shift, and go to state 37
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49


state 24

   14 exp: lvalue .
   34 lvalue: lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 29

    $default  reduce using rule 14 (exp)


state 25

    0 $accept: program $end .

    $default  accept


state 26

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


state 27

    5 stmt: ty ID . SEMICOLON
    6     | ty ID . ASSIGN exp SEMICOLON

    SEMICOLON  shift, and go to state 50
    ASSIGN     shift, and go to state 51


state 28

    7 stmt: ty LBRACK . INT RBRACK ID ASSIGN exp SEMICOLON
   32 ty: ty LBRACK . RBRACK

    INT     shift, and go to state 52
    RBRACK  shift, and go to state 53


state 29

   34 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 54
    lvalue  go to state 24


state 30

    4 stmt: lvalue ASSIGN . exp SEMICOLON

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 55
    lvalue  go to state 24


state 31

   11 stmt: LBRACE stmts RBRACE .

    $default  reduce using rule 11 (stmt)


state 32

    8 stmt: IF LPAREN exp . RPAREN stmt ELSE stmt
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    RPAREN  shift, and go to state 56
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


state 33

    9 stmt: WHILE LPAREN exp . RPAREN stmt
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    RPAREN  shift, and go to state 57
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


state 34

   10 stmt: FOR LPAREN ID . ASSIGN exp SEMICOLON exp SEMICOLON stmt RPAREN stmt

    ASSIGN  shift, and go to state 58


state 35

   13 stmt: FUN ID RETURNS . ty LPAREN tyargs RPAREN LBRACE stmts RBRACE

    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7

    ty  go to state 59


state 36

   29 exp: ID LPAREN . args RPAREN

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    $default  reduce using rule 35 (args)

    exp     go to state 60
    lvalue  go to state 24
    args    go to state 61


state 37

   12 stmt: RETURN exp SEMICOLON .

    $default  reduce using rule 12 (stmt)


state 38

   17 exp: exp PLUS . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 62
    lvalue  go to state 24


state 39

   18 exp: exp MINUS . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 63
    lvalue  go to state 24


state 40

   19 exp: exp TIMES . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 64
    lvalue  go to state 24


state 41

   20 exp: exp DIVIDE . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 65
    lvalue  go to state 24


state 42

   21 exp: exp EQ . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 66
    lvalue  go to state 24


state 43

   22 exp: exp NEQ . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 67
    lvalue  go to state 24


state 44

   23 exp: exp LT . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 68
    lvalue  go to state 24


state 45

   25 exp: exp LE . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 69
    lvalue  go to state 24


state 46

   24 exp: exp GT . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 70
    lvalue  go to state 24


state 47

   26 exp: exp GE . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 71
    lvalue  go to state 24


state 48

   27 exp: exp AND . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 72
    lvalue  go to state 24


state 49

   28 exp: exp OR . exp

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 73
    lvalue  go to state 24


state 50

    5 stmt: ty ID SEMICOLON .

    $default  reduce using rule 5 (stmt)


state 51

    6 stmt: ty ID ASSIGN . exp SEMICOLON

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 74
    lvalue  go to state 24


state 52

    7 stmt: ty LBRACK INT . RBRACK ID ASSIGN exp SEMICOLON

    RBRACK  shift, and go to state 75


state 53

   32 ty: ty LBRACK RBRACK .

    $default  reduce using rule 32 (ty)


state 54

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   34 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 76
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49


state 55

    4 stmt: lvalue ASSIGN exp . SEMICOLON
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    SEMICOLON  shift, and go to state 77
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49


state 56

    8 stmt: IF LPAREN exp RPAREN . stmt ELSE stmt

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    stmt    go to state 78
    ty      go to state 13
    lvalue  go to state 14


state 57

    9 stmt: WHILE LPAREN exp RPAREN . stmt

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    stmt    go to state 79
    ty      go to state 13
    lvalue  go to state 14


state 58

   10 stmt: FOR LPAREN ID ASSIGN . exp SEMICOLON exp SEMICOLON stmt RPAREN stmt

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 80
    lvalue  go to state 24


state 59

   13 stmt: FUN ID RETURNS ty . LPAREN tyargs RPAREN LBRACE stmts RBRACE
   32 ty: ty . LBRACK RBRACK

    LPAREN  shift, and go to state 81
    LBRACK  shift, and go to state 82


state 60

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   36 args: exp .
   37     | exp . COMMA args

    COMMA   shift, and go to state 83
    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48
    OR      shift, and go to state 49

    $default  reduce using rule 36 (args)


state 61

   29 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 84


state 62

   17 exp: exp . PLUS exp
   17    | exp PLUS exp .
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 17 (exp)


state 63

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   18    | exp MINUS exp .
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    $default  reduce using rule 18 (exp)


state 64

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   19    | exp TIMES exp .
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    $default  reduce using rule 19 (exp)


state 65

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   20    | exp DIVIDE exp .
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    $default  reduce using rule 20 (exp)


state 66

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   21    | exp EQ exp .
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


state 67

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   22    | exp NEQ exp .
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


state 68

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   23    | exp LT exp .
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


state 69

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   25    | exp LE exp .
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (exp)


state 70

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   24    | exp GT exp .
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (exp)


state 71

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   26    | exp GE exp .
   27    | exp . AND exp
   28    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (exp)


state 72

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   27    | exp AND exp .
   28    | exp . OR exp

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47

    $default  reduce using rule 27 (exp)


state 73

   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp
   28    | exp OR exp .

    PLUS    shift, and go to state 38
    MINUS   shift, and go to state 39
    TIMES   shift, and go to state 40
    DIVIDE  shift, and go to state 41
    EQ      shift, and go to state 42
    NEQ     shift, and go to state 43
    LT      shift, and go to state 44
    LE      shift, and go to state 45
    GT      shift, and go to state 46
    GE      shift, and go to state 47
    AND     shift, and go to state 48

    $default  reduce using rule 28 (exp)


state 74

    6 stmt: ty ID ASSIGN exp . SEMICOLON
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    SEMICOLON  shift, and go to state 85
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49


state 75

    7 stmt: ty LBRACK INT RBRACK . ID ASSIGN exp SEMICOLON

    ID  shift, and go to state 86


state 76

   34 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 34 (lvalue)


state 77

    4 stmt: lvalue ASSIGN exp SEMICOLON .

    $default  reduce using rule 4 (stmt)


state 78

    8 stmt: IF LPAREN exp RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 87


state 79

    9 stmt: WHILE LPAREN exp RPAREN stmt .

    $default  reduce using rule 9 (stmt)


state 80

   10 stmt: FOR LPAREN ID ASSIGN exp . SEMICOLON exp SEMICOLON stmt RPAREN stmt
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    SEMICOLON  shift, and go to state 88
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49


state 81

   13 stmt: FUN ID RETURNS ty LPAREN . tyargs RPAREN LBRACE stmts RBRACE

    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7

    $default  reduce using rule 38 (tyargs)

    ty      go to state 89
    tyargs  go to state 90


state 82

   32 ty: ty LBRACK . RBRACK

    RBRACK  shift, and go to state 53


state 83

   37 args: exp COMMA . args

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    $default  reduce using rule 35 (args)

    exp     go to state 60
    lvalue  go to state 24
    args    go to state 91


state 84

   29 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 29 (exp)


state 85

    6 stmt: ty ID ASSIGN exp SEMICOLON .

    $default  reduce using rule 6 (stmt)


state 86

    7 stmt: ty LBRACK INT RBRACK ID . ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 92


state 87

    8 stmt: IF LPAREN exp RPAREN stmt ELSE . stmt

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    stmt    go to state 93
    ty      go to state 13
    lvalue  go to state 14


state 88

   10 stmt: FOR LPAREN ID ASSIGN exp SEMICOLON . exp SEMICOLON stmt RPAREN stmt

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 94
    lvalue  go to state 24


state 89

   32 ty: ty . LBRACK RBRACK
   39 tyargs: ty . ID
   40       | ty . ID COMMA tyargs

    ID      shift, and go to state 95
    LBRACK  shift, and go to state 82


state 90

   13 stmt: FUN ID RETURNS ty LPAREN tyargs . RPAREN LBRACE stmts RBRACE

    RPAREN  shift, and go to state 96


state 91

   37 args: exp COMMA args .

    $default  reduce using rule 37 (args)


state 92

    7 stmt: ty LBRACK INT RBRACK ID ASSIGN . exp SEMICOLON

    ID      shift, and go to state 20
    STRING  shift, and go to state 21
    INT     shift, and go to state 22

    exp     go to state 97
    lvalue  go to state 24


state 93

    8 stmt: IF LPAREN exp RPAREN stmt ELSE stmt .

    $default  reduce using rule 8 (stmt)


state 94

   10 stmt: FOR LPAREN ID ASSIGN exp SEMICOLON exp . SEMICOLON stmt RPAREN stmt
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    SEMICOLON  shift, and go to state 98
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49


state 95

   39 tyargs: ty ID .
   40       | ty ID . COMMA tyargs

    COMMA  shift, and go to state 99

    $default  reduce using rule 39 (tyargs)


state 96

   13 stmt: FUN ID RETURNS ty LPAREN tyargs RPAREN . LBRACE stmts RBRACE

    LBRACE  shift, and go to state 100


state 97

    7 stmt: ty LBRACK INT RBRACK ID ASSIGN exp . SEMICOLON
   17 exp: exp . PLUS exp
   18    | exp . MINUS exp
   19    | exp . TIMES exp
   20    | exp . DIVIDE exp
   21    | exp . EQ exp
   22    | exp . NEQ exp
   23    | exp . LT exp
   24    | exp . GT exp
   25    | exp . LE exp
   26    | exp . GE exp
   27    | exp . AND exp
   28    | exp . OR exp

    SEMICOLON  shift, and go to state 101
    PLUS       shift, and go to state 38
    MINUS      shift, and go to state 39
    TIMES      shift, and go to state 40
    DIVIDE     shift, and go to state 41
    EQ         shift, and go to state 42
    NEQ        shift, and go to state 43
    LT         shift, and go to state 44
    LE         shift, and go to state 45
    GT         shift, and go to state 46
    GE         shift, and go to state 47
    AND        shift, and go to state 48
    OR         shift, and go to state 49


state 98

   10 stmt: FOR LPAREN ID ASSIGN exp SEMICOLON exp SEMICOLON . stmt RPAREN stmt

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    stmt    go to state 102
    ty      go to state 13
    lvalue  go to state 14


state 99

   40 tyargs: ty ID COMMA . tyargs

    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7

    $default  reduce using rule 38 (tyargs)

    ty      go to state 89
    tyargs  go to state 103


state 100

   13 stmt: FUN ID RETURNS ty LPAREN tyargs RPAREN LBRACE . stmts RBRACE

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    $default  reduce using rule 2 (stmts)

    stmts   go to state 104
    stmt    go to state 12
    ty      go to state 13
    lvalue  go to state 14


state 101

    7 stmt: ty LBRACK INT RBRACK ID ASSIGN exp SEMICOLON .

    $default  reduce using rule 7 (stmt)


state 102

   10 stmt: FOR LPAREN ID ASSIGN exp SEMICOLON exp SEMICOLON stmt . RPAREN stmt

    RPAREN  shift, and go to state 105


state 103

   40 tyargs: ty ID COMMA tyargs .

    $default  reduce using rule 40 (tyargs)


state 104

   13 stmt: FUN ID RETURNS ty LPAREN tyargs RPAREN LBRACE stmts . RBRACE

    RBRACE  shift, and go to state 106


state 105

   10 stmt: FOR LPAREN ID ASSIGN exp SEMICOLON exp SEMICOLON stmt RPAREN . stmt

    ID        shift, and go to state 1
    LBRACE    shift, and go to state 2
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    FOR       shift, and go to state 5
    INTTY     shift, and go to state 6
    STRINGTY  shift, and go to state 7
    FUN       shift, and go to state 8
    RETURN    shift, and go to state 9

    stmt    go to state 107
    ty      go to state 13
    lvalue  go to state 14


state 106

   13 stmt: FUN ID RETURNS ty LPAREN tyargs RPAREN LBRACE stmts RBRACE .

    $default  reduce using rule 13 (stmt)


state 107

   10 stmt: FOR LPAREN ID ASSIGN exp SEMICOLON exp SEMICOLON stmt RPAREN stmt .

    $default  reduce using rule 10 (stmt)
